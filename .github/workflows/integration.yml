---
name: integration

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  actionlint:
    name: actionlint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Run actionlint target
        run: make lint/actionlint

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Run golangci-lint target
        run: make lint/golangci-lint

  hadolint:
    name: hadolint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Run hadolint target
        run: make lint/hadolint

  yamllint:
    name: yamllint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Run yamllint target
        run: make lint/yamllint

  audit:
    name: audit
    needs: ["actionlint", "golangci-lint", "hadolint", "yamllint"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Audit application
        run: make audit

  build:
    name: build
    needs: ["audit"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Build application
        run: make build

  test:
    name: test
    needs: ["build"]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: ./.github/actions/docker-login
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.ANTORUS_TOKEN }}

      - name: Run unit tests
        run: make test/unit
